name: Main

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# env:
#   IMAGE_NAME: gambilife/cc-front:${{ github.sha }}

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   env:
  #     REACT_APP_BACKEND_URL: wss://dev.jinglebets.com/graphql
  #     IMAGE_NAME: gambilife/cc-front-dev:${{ github.sha }}
  #     REACT_APP_API_BASE_PATH: https://dev.jinglebets.com
  #     REACT_APP_API_BASE_PATH_WS: wss://dev.jinglebets.com
  #     REACT_APP_RECAPTCHA: 6LcYFagZAAAAAKuCNEpzAen8lyDEkns9fB7C3Lda
  #     REACT_APP_REDUCE_MOTION: true
  #     REACT_APP_BLOCKCHAIN_EXPLORER_URL: https://live.blockcypher.com/btc-testnet/tx

  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Use Node.js
  #     uses: actions/setup-node@v1
  #     with:
  #       node-version: '12.x'

  #   - name: Cache node modules
  #     uses: actions/cache@v2
  #     env:
  #       cache-name: cache-node-modules
  #     with:
  #       path: |
  #         ~/.npm
  #         **/node_modules
  #       key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
  #       restore-keys: |
  #         ${{ runner.os }}-build-${{ env.cache-name }}-
  #         ${{ runner.os }}-build-
  #         ${{ runner.os }}-

  #   - name: Install dependencies
  #     run: yarn
      
  #   - name: Build
  #     run: yarn build
    
  #   - name: Test
  #     run: yarn test:single
      
  #   - uses: 8398a7/action-slack@v3
  #     with:
  #       status: ${{ job.status }}
  #       fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # optional
  #       SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
  #     if: always()

  dev-build:
    runs-on: ubuntu-latest
    # needs: [test]
    env:
      REACT_APP_BACKEND_URL: wss://dev.jinglebets.com/graphql
      IMAGE_NAME: gambilife/cc-front-dev:${{ github.sha }}
      REACT_APP_API_BASE_PATH: https://dev.jinglebets.com
      REACT_APP_API_BASE_PATH_WS: wss://dev.jinglebets.com
      REACT_APP_RECAPTCHA: 6LcYFagZAAAAAKuCNEpzAen8lyDEkns9fB7C3Lda
      REACT_APP_REDUCE_MOTION: true
      REACT_APP_BLOCKCHAIN_EXPLORER_URL: https://live.blockcypher.com/btc-testnet/tx

    steps:
    - uses: actions/checkout@v2
      
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: |
          ~/.npm
          **/node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install dependencies
      run: yarn
      
    - name: Build
      run: yarn build

    - name: Build image
      run: docker build . --file Dockerfile --tag $IMAGE_NAME

    # - name: Dump env
    #   run: env | sort
    # - name: Dump GitHub context
    #   env:
    #     GITHUB_CONTEXT: ${{ toJson(github) }}
    #   run: echo "$GITHUB_CONTEXT"      
    
    
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: gambilife/cc-front-dev
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tags: "latest,${{ github.sha }}"

    - name: Deploy to cluster
      uses: steebchen/kubectl@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: set image deployment/cc-react-app-v1 cc-react-app-v1=$IMAGE_NAME -n dev


    - uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # optional
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
      if: always()


  staging-build:
    runs-on: ubuntu-latest
    # needs: [test]  
    env:
      REACT_APP_BACKEND_URL: wss://staging.jinglebets.com/graphql
      IMAGE_NAME: gambilife/cc-front-staging:${{ github.sha }}
      REACT_APP_API_BASE_PATH: https://staging.jinglebets.com
      REACT_APP_API_BASE_PATH_WS: wss://staging.jinglebets.com
      REACT_APP_RECAPTCHA: 6LcYFagZAAAAAKuCNEpzAen8lyDEkns9fB7C3Lda
      REACT_APP_REDUCE_MOTION: true
      REACT_APP_BLOCKCHAIN_EXPLORER_URL: https://live.blockcypher.com/btc-testnet/tx

    steps:
    - uses: actions/checkout@v2
      
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: |
          ~/.npm
          **/node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install dependencies
      run: yarn
      
    - name: Build
      run: yarn build

    - name: Build image
      run: docker build . --file Dockerfile --tag $IMAGE_NAME

    # - name: Get release version
    #   id: get_version
    #   run: echo ::set-env name=RELEASE_TAG::$(echo ${{ github.sha }})
    
    # - run: echo ${{env.RELEASE_TAG}}
    
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        # name: gambilife/front
        name: gambilife/cc-front-staging
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        # tags: "latest,${{ env.RELEASE_TAG }}"
        tags: "latest,${{ github.sha }}"

    - name: Deploy to cluster
      uses: steebchen/kubectl@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        # args: set image deployment/cc-react-app-v1 cc-react-app-v1=gambilife/front:${{ github.sha }} -n staging
        args: set image deployment/cc-react-app-v1 cc-react-app-v1=$IMAGE_NAME -n staging

    - uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # optional
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
      if: always()



