// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CodeInput should match snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="container react-code-input"
        style="display: inline-block;"
      >
        <input
          autocomplete="off"
          data-id="0"
          data-valid="true"
          id="0b57f882-db68-41a1-b9e2-f1b5a4bd9541-0"
          inputmode="numeric"
          max="9"
          maxlength="6"
          min="0"
          type="number"
          value=""
        />
        <input
          autocomplete="off"
          data-id="1"
          data-valid="true"
          id="0b57f882-db68-41a1-b9e2-f1b5a4bd9541-1"
          inputmode="numeric"
          max="9"
          maxlength="6"
          min="0"
          type="number"
          value=""
        />
        <input
          autocomplete="off"
          data-id="2"
          data-valid="true"
          id="0b57f882-db68-41a1-b9e2-f1b5a4bd9541-2"
          inputmode="numeric"
          max="9"
          maxlength="6"
          min="0"
          type="number"
          value=""
        />
        <input
          autocomplete="off"
          data-id="3"
          data-valid="true"
          id="0b57f882-db68-41a1-b9e2-f1b5a4bd9541-3"
          inputmode="numeric"
          max="9"
          maxlength="6"
          min="0"
          type="number"
          value=""
        />
        <input
          autocomplete="off"
          data-id="4"
          data-valid="true"
          id="0b57f882-db68-41a1-b9e2-f1b5a4bd9541-4"
          inputmode="numeric"
          max="9"
          maxlength="6"
          min="0"
          type="number"
          value=""
        />
        <input
          autocomplete="off"
          data-id="5"
          data-valid="true"
          id="0b57f882-db68-41a1-b9e2-f1b5a4bd9541-5"
          inputmode="numeric"
          max="9"
          maxlength="1"
          min="0"
          type="number"
          value=""
        />
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="container react-code-input"
      style="display: inline-block;"
    >
      <input
        autocomplete="off"
        data-id="0"
        data-valid="true"
        id="0b57f882-db68-41a1-b9e2-f1b5a4bd9541-0"
        inputmode="numeric"
        max="9"
        maxlength="6"
        min="0"
        type="number"
        value=""
      />
      <input
        autocomplete="off"
        data-id="1"
        data-valid="true"
        id="0b57f882-db68-41a1-b9e2-f1b5a4bd9541-1"
        inputmode="numeric"
        max="9"
        maxlength="6"
        min="0"
        type="number"
        value=""
      />
      <input
        autocomplete="off"
        data-id="2"
        data-valid="true"
        id="0b57f882-db68-41a1-b9e2-f1b5a4bd9541-2"
        inputmode="numeric"
        max="9"
        maxlength="6"
        min="0"
        type="number"
        value=""
      />
      <input
        autocomplete="off"
        data-id="3"
        data-valid="true"
        id="0b57f882-db68-41a1-b9e2-f1b5a4bd9541-3"
        inputmode="numeric"
        max="9"
        maxlength="6"
        min="0"
        type="number"
        value=""
      />
      <input
        autocomplete="off"
        data-id="4"
        data-valid="true"
        id="0b57f882-db68-41a1-b9e2-f1b5a4bd9541-4"
        inputmode="numeric"
        max="9"
        maxlength="6"
        min="0"
        type="number"
        value=""
      />
      <input
        autocomplete="off"
        data-id="5"
        data-valid="true"
        id="0b57f882-db68-41a1-b9e2-f1b5a4bd9541-5"
        inputmode="numeric"
        max="9"
        maxlength="1"
        min="0"
        type="number"
        value=""
      />
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
